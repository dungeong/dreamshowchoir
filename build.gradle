plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'kr.ulsan.dreamshowchoir'
version = '0.0.1-SNAPSHOT'
description = 'dreamshowchoir homepage project'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// AWS S3 의존성 버전 관리를 위한 BOM(Bill of Materials) 추가
dependencyManagement {
    imports {
        mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:3.0.1"
    }
}

repositories {
	mavenCentral()
}

dependencies {

    // Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 입력값 검증

    // Database
    implementation 'org.flywaydb:flyway-core'   // Flyway Core 라이브러리
    runtimeOnly 'org.postgresql:postgresql'     // PostgreSQL 드라이버

    // Security (OAuth2 + JWT)
    implementation 'org.springframework.boot:spring-boot-starter-security'      // (추가) 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // (추가) OAuth2
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'                           // (추가) JWT 라이브러리 (API)
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'                            // (추가) JWT 라이브러리 (구현체)
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'                         // (추가) JWT (JSON 파싱용)

    // AWS S3 (File Storage)
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3' // (추가) AWS S3

    // Utils & Docs
    compileOnly 'org.projectlombok:lombok'                          // Lombok
    annotationProcessor 'org.projectlombok:lombok'                // Lombok
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0' // Swagger(Springdoc)
    implementation 'org.modelmapper:modelmapper:3.1.1'            // ModelMapper

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test' // 시큐리티 테스트용
}

tasks.named('test') {
    useJUnitPlatform()
}
